namespace {namespace};

[Authorize(Policy = Permissions.{nameofPlural}.View)]
public record Get{itemname}ListQuery 
     : DataGridModel, ICacheableQuery<PaginatedResponse<{itemname}Model>>
{
    [JsonInclude]
    public string CacheKey => $"{CacheKeys.{itemname}}_{PageNumber}_{PageSize}";
     
}

internal sealed class Get{itemname}QueryHandler(ISqlConnectionFactory sqlConnection) 
     : IQueryHandler<Get{itemname}ListQuery, PaginatedResponse<{itemname}Model>>
{
    public async Task<Result<PaginatedResponse<{itemname}Model>>> Handle(Get{itemname}ListQuery request, CancellationToken cancellationToken)
    {
        var connection = sqlConnection.GetOpenConnection();

        {getListQuerySql}

        return await PaginatedResponse<{itemname}Model>
            .CreateAsync(connection, sql, request);

    }
}


