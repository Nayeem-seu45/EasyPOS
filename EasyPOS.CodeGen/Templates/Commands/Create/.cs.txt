namespace {namespace};

public record Create{itemname}Command: ICacheInvalidatorCommand<Guid>
{
    {dtoFieldDefinition}
    public string CacheKey => CacheKeys.{itemname};
}
    
internal sealed class Create{itemname}CommandHandler(
    IApplicationDbContext dbContext) 
    : ICommandHandler<Create{itemname}Command, Guid>
{
    public async Task<Guid> Handle(Create{itemname}Command request, CancellationToken cancellationToken)
    {
       var entity = request.Adapt<{itemname}>();

       dbContext.{nameofPlural}.Add(entity);

       await dbContext.SaveChangesAsync(cancellationToken);

       return  entity.Id;
    }
}